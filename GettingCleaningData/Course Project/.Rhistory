cran3<-select(ip_id, package, size)
cran3<-select(cran,ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size / 2^10)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size * 1000)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
install.packages(RODBC)
install.packages("RODBC")
library(RODBC)
ch<-odbcConnect("RLocal")
ch
site<-as.matrix(sqlFetch(ch,)"[Enrollment].[SiteInformation]", rownames="SiteCode")
site<-as.matrix(sqlFetch(ch,"[Enrollment].[SiteInformation]", rownames="SiteCode"))
site<-as.matrix(sqlFetch(ch, "[Enrollment].[SiteInformation]", rownames="SiteCode"))
site
site<-as.matrix(sqlFetch(ch, "Enrollment.SiteInformation", rownames="SiteCode"))
site
str(site)
library(XML)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileUrl, useInternet=TRUE)
doc <- xmlTreeParse(fileUrl, useInternal=TRUE)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileUrl, useInternal=TRUE)
fileUrl<- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileUrl, useInternal=TRUE)
fileUrl<- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileUrl, useInternal=TRUE)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
names(rootNode)
rootNode
rootNode[[1]]
rootNode[[1]][[1]]
xmlSApply(rootNode,xmlValue)
xpathSApply(rootNode,"//zipcode",xmlValue)
xpathSApply(rootNode,"//zipcode==21231",xmlValue)
xpathSApply(rootNode,"@zipcode='21231',xmlValue)
)
xpathSApply(rootNode,"@zipcode='21231'",xmlValue)
xpathSApply(rootNode,"//zipcode='21231'",xmlValue)
library(swirl)
swirl()
mydf <- read.csv(path2csv, stringasFactors = FALSE)
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
print(tbl_df)
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(x:size))
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", count == "US")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version == "3.0.2", country == "IN")
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500 )
filter(cran, size > 100500, r_os == "linux-gnu" )
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id)
)
arrange(cran2, package, ip_id)
arange(cran2, country, desc(r_version), ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb/2^10)
mutate(cran3, correct_size + 1000)
mutate(cran3, correct_size =  size + 1000)
summarize(cran, avg_bytes = mean(size))
swril()
swirl
swirl()
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package(cran, package)
by_package<-(cran, package)
by_package<- group_by(cran, package)
by_package
summarize(by_package, mean(size))
source('C:/Users/MSQUIC~1/AppData/Local/Temp/Rtmp2jDcTK/summarize1.R')
source('C:/Users/MSQUIC~1/AppData/Local/Temp/Rtmp2jDcTK/summarize1.R')
source('C:/Users/MSQUIC~1/AppData/Local/Temp/Rtmp2jDcTK/summarize1.R')
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_count <- filter(pack_sum, count > 679)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, count)
top_counts_sorted <- arrange(top_counts, desc(count)
)
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
source('C:/Users/MSQUIC~1/AppData/Local/Temp/Rtmp2jDcTK/chain1.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
submit()
source('~/.active-rstudio-document', echo=TRUE)
submit()
submit()
source('C:/Users/MSQUIC~1/AppData/Local/Temp/Rtmp2jDcTK/chain2.R', echo=TRUE)
submit()
submit()
submit()
submit()
source('D:/Skitch/Code/R/DataScienceSpecialization/DataScienceSpecialization/GettingCleaningData/Course Project/run_analysis.R')
dt <- run_analysis()
head(dt)
str(dt)
View(dt)
source('D:/Skitch/Code/R/DataScienceSpecialization/DataScienceSpecialization/GettingCleaningData/Course Project/run_analysis.R')
dt <- run_analysis()
View(dt)
dim(dt)
names(dt)[1:2]
dt %>% group_by(subjectID, Activity)
dt %>% group_by(SubjectID, Activity)
dt %>% group_by(SubjectID, Activity) %>% summarize(3:79)
dt %>% group_by(SubjectID, Activity) %>% summarize()
dt %>% group_by(SubjectID, Activity) %>% summarize()[3:79]
dt %>% group_by(SubjectID, Activity) %>% summarize_each(func(mean))
dt %>% group_by(SubjectID, Activity) %>% summarise_each(func(mean))
dt %>% group_by(SubjectID, Activity) %>% summarise_each(funs(mean))
dt.mean <- dt %>% group_by(SubjectID, Activity) %>% summarise_each(funs(mean))
out <- write.table(dt.mean, "./tidyDataMean.txt",  sep = " ", col.names = TRUE, row.names = FALSE)
source('D:/Skitch/Code/R/DataScienceSpecialization/DataScienceSpecialization/GettingCleaningData/Course Project/run_analysis.R')
dt.group <- dt %>% group_by(SubjectID, Activity)
head(dt.group)
select (dt.group, SubjectID, Activity)
## Set the directory
setwd("D:/Skitch/Code/R/DataScienceSpecialization/DataScienceSpecialization/GettingCleaningData/Course Project")
library(dplyr)
library(data.table)
## Get the Activitity labes
## This will be common for both Training and Test data
activityLableFile <- "./UCI HAR Dataset/activity_labels.txt"
activityLables <- read.csv(activityLableFile, sep = " ", header=FALSE)
## Get the Column names
featureFile <- "./UCI HAR Dataset/features.txt"
featureColumns <- read.csv(featureFile, sep = " ", header=FALSE)
# Get the mean() and std() columns to keep
keep <- c(1:6, 41:46, 81:86, 121:126, 161:166, 201:202, 214:215, 227:228, 240:241,
253:254, 266:271, 294:296, 345:350, 373:375, 424:429, 452:454,
503:504, 516:517, 526, 529:530, 539, 542:543)
## These are the columns that are going to be added to the data to
## identify the subjects and activities
new.Column.Names <- c("SubjectID", "Activity")
## Get the Training Data
training.label.file <- "./UCI HAR Dataset/train/y_train.txt"
trainingLabels <- read.csv(training.label.file, header=FALSE)
newTrainingLabels <- merge(trainingLabels, activityLables, by.x ='V1', by.y ='V1')
trainingSubjectFile <- "./UCI HAR Dataset/train/subject_train.txt"
trainingSubjects <- read.csv(trainingSubjectFile, header=FALSE)
trainingDataFile <- "./UCI HAR Dataset/train/X_train.txt"
dt.Training.X <- read_data_file(trainingDataFile)
read_data_file <- function(dataFile){
first.5.rows <- read.table(dataFile, header=FALSE, nrows = 5)
classes <- sapply(first.5.rows, class)
dt <- read.table(dataFile, header=FALSE, colClasses = classes)
dt
}
dt.Training.X <- read_data_file(trainingDataFile)
# read the large data files by first reading 5 rows to get the column classes
# Rename the columns
names(dt.Training.X) <- featureColumns[,2]
## Keep on the columns of interest
dt.Training.X <- subset(dt.Training.X, , keep)
# Add the subject and label information to the data table
dt.Training.X <- cbind(trainingSubjects, newTrainingLabels$V2, dt.Training.X)
# Rename the columns
colnames(dt.Training.X)[1:2]<- new.Column.Names
names(trainingSubject)
names(trainingSubject)
names(trainingSubject)
trainingSubject
trainingSubject
names(trainingSubjects)
nrows(trainingSubjects)
nrow(trainingSubjects)
nrow(select(trainingSubjects, V1 == 1))
nrow(select(trainingSubjects, V1 == "1"))
nrow(select(trainingSubjects, V1 = "1"))
nrow(filter(trainingSubjects, V1 = "1"))
nrow(filter(trainingSubjects, V1 == 1))
View(dt.Training.X)
View(dt.Training.X)
View(trainingLabels)
View(trainingSubjects)
View(newTrainingLabels)
View(newTrainingLabels)
View(trainingLabels)
View(trainingLabels)
View(trainingSubjects)
View(trainingSubjects)
View(activityLables)
View(activityLables)
View(newTrainingLabels)
View(newTrainingLabels)
View(trainingLabels)
View(trainingLabels)
View(activityLables)
View(activityLables)
View(trainingSubjects)
View(trainingSubjects)
View(newTrainingLabels)
View(newTrainingLabels)
View(trainingLabels)
View(trainingLabels)
dt.Training.X <- cbind(trainingSubjects, trainingLabels, dt.Training.X)
activityLableFile <- "./UCI HAR Dataset/activity_labels.txt"
activityLables <- read.csv(activityLableFile, sep = " ", header=FALSE)
## Get the Column names
featureFile <- "./UCI HAR Dataset/features.txt"
featureColumns <- read.csv(featureFile, sep = " ", header=FALSE)
# Get the mean() and std() columns to keep
keep <- c(1:6, 41:46, 81:86, 121:126, 161:166, 201:202, 214:215, 227:228, 240:241,
253:254, 266:271, 294:296, 345:350, 373:375, 424:429, 452:454,
503:504, 516:517, 526, 529:530, 539, 542:543)
## These are the columns that are going to be added to the data to
## identify the subjects and activities
new.Column.Names <- c("SubjectID", "Activity")
## Get the Training Data
training.label.file <- "./UCI HAR Dataset/train/y_train.txt"
trainingLabels <- read.csv(training.label.file, header=FALSE)
newTrainingLabels <- merge(trainingLabels, activityLables, by.x ='V1', by.y ='V1')
trainingSubjectFile <- "./UCI HAR Dataset/train/subject_train.txt"
trainingSubjects <- read.csv(trainingSubjectFile, header=FALSE)
trainingDataFile <- "./UCI HAR Dataset/train/X_train.txt"
dt.Training.X <- read_data_file(trainingDataFile)
# read the large data files by first reading 5 rows to get the column classes
# Rename the columns
names(dt.Training.X) <- featureColumns[,2]
## Keep on the columns of interest
dt.Training.X <- subset(dt.Training.X, , keep)
# Add the subject and label information to the data table
####dt.Training.X <- cbind(trainingSubjects, newTrainingLabels$V2, dt.Training.X)
dt.Training.X <- cbind(trainingSubjects, trainingLabels, dt.Training.X)
## Get the Activitity labes
## This will be common for both Training and Test data
activityLableFile <- "./UCI HAR Dataset/activity_labels.txt"
activityLables <- read.csv(activityLableFile, sep = " ", header=FALSE)
## Get the Column names
featureFile <- "./UCI HAR Dataset/features.txt"
featureColumns <- read.csv(featureFile, sep = " ", header=FALSE)
# Get the mean() and std() columns to keep
keep <- c(1:6, 41:46, 81:86, 121:126, 161:166, 201:202, 214:215, 227:228, 240:241,
253:254, 266:271, 294:296, 345:350, 373:375, 424:429, 452:454,
503:504, 516:517, 526, 529:530, 539, 542:543)
## These are the columns that are going to be added to the data to
## identify the subjects and activities
new.Column.Names <- c("SubjectID", "Activity")
## Get the Training Data
training.label.file <- "./UCI HAR Dataset/train/y_train.txt"
trainingLabels <- read.csv(training.label.file, header=FALSE)
newTrainingLabels <- merge(trainingLabels, activityLables, by.x ='V1', by.y ='V1')
trainingSubjectFile <- "./UCI HAR Dataset/train/subject_train.txt"
trainingSubjects <- read.csv(trainingSubjectFile, header=FALSE)
trainingDataFile <- "./UCI HAR Dataset/train/X_train.txt"
dt.Training.X <- read_data_file(trainingDataFile)
}
read_data_file <- function(dataFile){
first.5.rows <- read.table(dataFile, header=FALSE, nrows = 5)
classes <- sapply(first.5.rows, class)
dt <- read.table(dataFile, header=FALSE, colClasses = classes)
dt
}
read_data_file <- function(dataFile){
first.5.rows <- read.table(dataFile, header=FALSE, nrows = 5)
classes <- sapply(first.5.rows, class)
dt <- read.table(dataFile, header=FALSE, colClasses = classes)
dt
}
dt.Test.X <- read_data_file(testDataFile)
read_data_file <- function(dataFile){
first.5.rows <- read.table(dataFile, header=FALSE, nrows = 5)
classes <- sapply(first.5.rows, class)
dt <- read.table(dataFile, header=FALSE, colClasses = classes)
dt
}
## Get the Activitity labes
## This will be common for both Training and Test data
activityLableFile <- "./UCI HAR Dataset/activity_labels.txt"
activityLables <- read.csv(activityLableFile, sep = " ", header=FALSE)
## Get the Column names
featureFile <- "./UCI HAR Dataset/features.txt"
featureColumns <- read.csv(featureFile, sep = " ", header=FALSE)
# Get the mean() and std() columns to keep
keep <- c(1:6, 41:46, 81:86, 121:126, 161:166, 201:202, 214:215, 227:228, 240:241,
253:254, 266:271, 294:296, 345:350, 373:375, 424:429, 452:454,
503:504, 516:517, 526, 529:530, 539, 542:543)
## These are the columns that are going to be added to the data to
## identify the subjects and activities
new.Column.Names <- c("SubjectID", "Activity")
## Get the Training Data
training.label.file <- "./UCI HAR Dataset/train/y_train.txt"
trainingLabels <- read.csv(training.label.file, header=FALSE)
newTrainingLabels <- merge(trainingLabels, activityLables, by.x ='V1', by.y ='V1')
trainingSubjectFile <- "./UCI HAR Dataset/train/subject_train.txt"
trainingSubjects <- read.csv(trainingSubjectFile, header=FALSE)
trainingDataFile <- "./UCI HAR Dataset/train/X_train.txt"
dt.Training.X <- read_data_file(trainingDataFile)
# read the large data files by first reading 5 rows to get the column classes
# Rename the columns
names(dt.Training.X) <- featureColumns[,2]
## Keep on the columns of interest
dt.Training.X <- subset(dt.Training.X, , keep)
# Add the subject and label information to the data table
####dt.Training.X <- cbind(trainingSubjects, newTrainingLabels$V2, dt.Training.X)
dt.Training.X <- cbind(trainingSubjects, trainingLabels, dt.Training.X)
View(dt.Training.X)
View(dt.Training.X)
# Rename the columns
colnames(dt.Training.X)[1:2]<- new.Column.Names
View(dt.Training.X)
View(dt.Training.X)
View(dt.Training.X)
View(activityLables)
View(dt.Training.X)
View(dt.Training.X)
new.dt <- merge(dt.Training.X, activityLables, by.x = 'Activity', by.y = 'V1')
View(new.dt)
View(trainingLabels)
head(arange(new.td, SubjectID, Activity))
head(arrange(new.td, SubjectID, Activity))
head(arrange(new.dt, SubjectID, Activity))
read_data_file <- function(dataFile){
first.5.rows <- read.table(dataFile, header=FALSE, nrows = 5)
classes <- sapply(first.5.rows, class)
dt <- read.table(dataFile, header=FALSE, colClasses = classes)
dt
}
library(dplyr)
library(data.table)
## Get the Activitity labes
## This will be common for both Training and Test data
activityLableFile <- "./UCI HAR Dataset/activity_labels.txt"
activityLables <- read.csv(activityLableFile, sep = " ", header=FALSE)
## Get the Column names
featureFile <- "./UCI HAR Dataset/features.txt"
featureColumns <- read.csv(featureFile, sep = " ", header=FALSE)
# Get the mean() and std() columns to keep
keep <- c(1:6, 41:46, 81:86, 121:126, 161:166, 201:202, 214:215, 227:228, 240:241,
253:254, 266:271, 294:296, 345:350, 373:375, 424:429, 452:454,
503:504, 516:517, 526, 529:530, 539, 542:543)
## These are the columns that are going to be added to the data to
## identify the subjects and activities
new.Column.Names <- c("SubjectID", "Activity")
## Get the Training Data
training.label.file <- "./UCI HAR Dataset/train/y_train.txt"
trainingLabels <- read.csv(training.label.file, header=FALSE)
newTrainingLabels <- merge(trainingLabels, activityLables, by.x ='V1', by.y ='V1')
View(newTrainingLabels)
View(trainingLabels)
trainingSubjectFile <- "./UCI HAR Dataset/train/subject_train.txt"
trainingSubjects <- read.csv(trainingSubjectFile, header=FALSE)
trainingDataFile <- "./UCI HAR Dataset/train/X_train.txt"
dt.Training.X <- read_data_file(trainingDataFile)
# read the large data files by first reading 5 rows to get the column classes
View(dt.Training.X)
# Rename the columns
names(dt.Training.X) <- featureColumns[,2]
## Keep on the columns of interest
dt.Training.X <- subset(dt.Training.X, , keep)
# Add the subject and label information to the data table
####dt.Training.X <- cbind(trainingSubjects, newTrainingLabels$V2, dt.Training.X)
dt.Training.X <- cbind(trainingSubjects, trainingLabels, dt.Training.X)
View(dt.Training.X)
# Rename the columns
colnames(dt.Training.X)[1:2]<- new.Column.Names
View(dt.Training.X)
View(activityLables)
View(dt.Training.X)
View(activityLables)
View(dt.Training.X)
dt.Training.X <- merge(dt.Training.X, activityLables, by.x ='Activity', by.y ='V2')
View(dt.Training.X)
read_data_file <- function(dataFile){
first.5.rows <- read.table(dataFile, header=FALSE, nrows = 5)
classes <- sapply(first.5.rows, class)
dt <- read.table(dataFile, header=FALSE, colClasses = classes)
dt
}
library(dplyr)
library(data.table)
## Get the Activitity labes
## This will be common for both Training and Test data
activityLableFile <- "./UCI HAR Dataset/activity_labels.txt"
activityLables <- read.csv(activityLableFile, sep = " ", header=FALSE)
## Get the Column names
featureFile <- "./UCI HAR Dataset/features.txt"
featureColumns <- read.csv(featureFile, sep = " ", header=FALSE)
# Get the mean() and std() columns to keep
keep <- c(1:6, 41:46, 81:86, 121:126, 161:166, 201:202, 214:215, 227:228, 240:241,
253:254, 266:271, 294:296, 345:350, 373:375, 424:429, 452:454,
503:504, 516:517, 526, 529:530, 539, 542:543)
## These are the columns that are going to be added to the data to
## identify the subjects and activities
new.Column.Names <- c("SubjectID", "Activity")
## Get the Training Data
training.label.file <- "./UCI HAR Dataset/train/y_train.txt"
trainingLabels <- read.csv(training.label.file, header=FALSE)
##newTrainingLabels <- merge(trainingLabels, activityLables, by.x ='V1', by.y ='V1')
trainingSubjectFile <- "./UCI HAR Dataset/train/subject_train.txt"
trainingSubjects <- read.csv(trainingSubjectFile, header=FALSE)
trainingDataFile <- "./UCI HAR Dataset/train/X_train.txt"
dt.Training.X <- read_data_file(trainingDataFile)
# read the large data files by first reading 5 rows to get the column classes
# Rename the columns
names(dt.Training.X) <- featureColumns[,2]
## Keep on the columns of interest
dt.Training.X <- subset(dt.Training.X, , keep)
# Add the subject and label information to the data table
####dt.Training.X <- cbind(trainingSubjects, newTrainingLabels$V2, dt.Training.X)
dt.Training.X <- cbind(trainingSubjects, trainingLabels, dt.Training.X)
dt.Training.X <- merge(dt.Training.X, activityLables, by.x ='Activity', by.y ='V1')
View(activityLables)
View(dt.Training.X)
# Rename the columns
colnames(dt.Training.X)[1:2]<- new.Column.Names
View(activityLables)
View(dt.Training.X)
dt.Training.X <- merge(dt.Training.X, activityLables, by.x ='Activity', by.y ='V1')
View(dt.Training.X)
View(dt.Training.X)
dt.Training <- subset(dt.Training.X, c(2,80,3:79))
dt.Training <- select(dt.Training.X, c(2,80,3:79))
View(dt.Training)
View(dt.Training)
dt.Training <- arrange(dt.Training, SubjectID, V2)
View(dt.Training)
View(dt.Training)
read_data_file <- function(dataFile){
first.5.rows <- read.table(dataFile, header=FALSE, nrows = 5)
classes <- sapply(first.5.rows, class)
dt <- read.table(dataFile, header=FALSE, colClasses = classes)
dt
}
library(dplyr)
library(data.table)
## Get the Activitity labes
## This will be common for both Training and Test data
activityLableFile <- "./UCI HAR Dataset/activity_labels.txt"
activityLables <- read.csv(activityLableFile, sep = " ", header=FALSE)
## Get the Column names
featureFile <- "./UCI HAR Dataset/features.txt"
featureColumns <- read.csv(featureFile, sep = " ", header=FALSE)
# Get the mean() and std() columns to keep
keep <- c(1:6, 41:46, 81:86, 121:126, 161:166, 201:202, 214:215, 227:228, 240:241,
253:254, 266:271, 294:296, 345:350, 373:375, 424:429, 452:454,
503:504, 516:517, 526, 529:530, 539, 542:543)
## These are the columns that are going to be added to the data to
## identify the subjects and activities
new.Column.Names <- c("SubjectID", "Activity")
## Get the Training Data
training.label.file <- "./UCI HAR Dataset/train/y_train.txt"
trainingLabels <- read.csv(training.label.file, header=FALSE)
trainingSubjectFile <- "./UCI HAR Dataset/train/subject_train.txt"
trainingSubjects <- read.csv(trainingSubjectFile, header=FALSE)
# read the large data files
trainingDataFile <- "./UCI HAR Dataset/train/X_train.txt"
dt.Training.X <- read_data_file(trainingDataFile)
# Rename the columns
names(dt.Training.X) <- featureColumns[,2]
## Keep on the columns of interest
dt.Training.X <- subset(dt.Training.X, , keep)
# Add the subject and label information to the data table
dt.Training.X <- cbind(trainingSubjects, trainingLabels, dt.Training.X)
# Rename the columns
colnames(dt.Training.X)[1:2]<- new.Column.Names
dt.Training.X <- merge(dt.Training.X, activityLables, by.x ='Activity', by.y ='V1')
View(dt.Training.X)
dt.Training.X <- select(dt.Training.X, c(2,80,3:79)) %>% arrange(SubjectID, V2)
# Rename the columns
colnames(dt.Training.X)[1:2]<- new.Column.Names
View(dt.Training.X)
source('D:/Skitch/Code/R/DataScienceSpecialization/DataScienceSpecialization/GettingCleaningData/Course Project/run_analysis.R')
