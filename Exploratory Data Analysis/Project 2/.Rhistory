xpathSApply(rootNode,"//zipcode==21231",xmlValue)
xpathSApply(rootNode,"@zipcode='21231',xmlValue)
)
xpathSApply(rootNode,"@zipcode='21231'",xmlValue)
xpathSApply(rootNode,"//zipcode='21231'",xmlValue)
library(swirl)
swirl()
mydf <- read.csv(path2csv, stringasFactors = FALSE)
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
print(tbl_df)
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(x:size))
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", count == "US")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version == "3.0.2", country == "IN")
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500 )
filter(cran, size > 100500, r_os == "linux-gnu" )
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id)
)
arrange(cran2, package, ip_id)
arange(cran2, country, desc(r_version), ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb/2^10)
mutate(cran3, correct_size + 1000)
mutate(cran3, correct_size =  size + 1000)
summarize(cran, avg_bytes = mean(size))
swril()
swirl
swirl()
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package(cran, package)
by_package<-(cran, package)
by_package<- group_by(cran, package)
by_package
summarize(by_package, mean(size))
source('C:/Users/MSQUIC~1/AppData/Local/Temp/Rtmp2jDcTK/summarize1.R')
source('C:/Users/MSQUIC~1/AppData/Local/Temp/Rtmp2jDcTK/summarize1.R')
source('C:/Users/MSQUIC~1/AppData/Local/Temp/Rtmp2jDcTK/summarize1.R')
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_count <- filter(pack_sum, count > 679)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, count)
top_counts_sorted <- arrange(top_counts, desc(count)
)
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
source('C:/Users/MSQUIC~1/AppData/Local/Temp/Rtmp2jDcTK/chain1.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
submit()
source('~/.active-rstudio-document', echo=TRUE)
submit()
submit()
source('C:/Users/MSQUIC~1/AppData/Local/Temp/Rtmp2jDcTK/chain2.R', echo=TRUE)
submit()
submit()
submit()
submit()
subjects <- c(1:10)
activity <- c(seq(1,3), seq(2,3), seq(3,4))
activity <- c(rep(1,3), rep(2,3), rep(3,4))
dim(activity)
length(activity)
activity
data <- rnorm(10)
data
indx <- c(1,2,3)
label <- c("Sit", "Jump", "Walk")
activityLabel <- data.frame(indx, label)
activityLabel
source('D:/Skitch/Code/R/DataScienceSpecialization/DataScienceSpecialization/GettingCleaningData/Quiz 3/Question 3.R')
xyplot(y ~ x | f, panel = function(x, y, ...) {
panel.xyplot(x, y, ...)  ## First call the default panel function for 'xyplot'
panel.abline(h = median(y), lty = 2)  ## Add a horizontal line at the median
})
lib
library(datasets)
xyplot(y ~ x | f, panel = function(x, y, ...) {
panel.xyplot(x, y, ...)  ## First call the default panel function for 'xyplot'
panel.abline(h = median(y), lty = 2)  ## Add a horizontal line at the median
})
library(lattice)
xyplot(y ~ x | f, panel = function(x, y, ...) {
panel.xyplot(x, y, ...)  ## First call the default panel function for 'xyplot'
panel.abline(h = median(y), lty = 2)  ## Add a horizontal line at the median
})
xyplot(y ~ x | f, data = mtcars, panel = function(x, y, ...) {
panel.xyplot(x, y, ...)  ## First call the default panel function for 'xyplot'
panel.abline(h = median(y), lty = 2)  ## Add a horizontal line at the median
})
xyplot(y ~ x | data = mtcars, panel = function(x, y, ...) {
panel.xyplot(x, y, ...)  ## First call the default panel function for 'xyplot'
panel.abline(h = median(y), lty = 2)  ## Add a horizontal line at the median
})
xyplot(y ~ x | data = mtcars, panel = function(x, y, ...) {
panel.xyplot(x, y, ...)  ## First call the default panel function for 'xyplot'
panel.abline(h = median(y), lty = 2)  ## Add a horizontal line at the median
})
xyplot(y ~ x | data = mtcars, panel = function(x, y, ...) {
panel.xyplot(x, y, ...)  ## First call the default panel function for 'xyplot'
panel.abline(h = median(y), lty = 2)  ## Add a horizontal line at the median
})
demo()
setwd("D:/Skitch/Code/R/DataScienceSpecialization/DataScienceSpecialization/Exploratory Data Analysis/Project 2")
source('D:/Skitch/Code/R/DataScienceSpecialization/DataScienceSpecialization/Exploratory Data Analysis/Project 2/Question 1.R')
with(pollutionByYear, plot(year, tot_Emmision))
head(pollutionBYYear)
head(pollutionByYear)
with(pollutionByYear, plot(year, tot_Emmision, pch = 1,
main = "Polution by Year"))
model <- lm(tot_Emmision ~ year, pollutionByYear)
abline(model, lwd = 2)
source('D:/Skitch/Code/R/DataScienceSpecialization/DataScienceSpecialization/Exploratory Data Analysis/Project 2/Question 1.R')
source('D:/Skitch/Code/R/DataScienceSpecialization/DataScienceSpecialization/Exploratory Data Analysis/Project 2/Question 1.R', echo=TRUE)
with(pollutionByYear, plot(year, tot_Emmision, pch = 2,
main = "Polution by Year"))
model <- lm(tot_Emmision ~ year, pollutionByYear)
abline(model, lwd = 2)
source('~/.active-rstudio-document', echo=TRUE)
pollution_by_year <- select(NEI, year, Emissions)
%>% group_by(year)
%>% summarise(tot_Emmision = sum(Emissions))
source('D:/Skitch/Code/R/DataScienceSpecialization/DataScienceSpecialization/Exploratory Data Analysis/Project 2/Question 1.R')
with(pollutionByYear, plot(year, tot_Emmision, pch = 2,
main = "Pollution by Year"))
model <- lm(tot_Emmision ~ year, pollutionByYear)
abline(model, lwd = 2)
source('~/.active-rstudio-document', echo=TRUE)
pollution <- select(NEI, year, Emissions)
pollutionByYear <- group_by(pollution, year)  %>%
summarise(tot_Emmision = sum(Emissions))
pollutionByYear <- select(NEI, year, Emissions) %>%
group_by(year)  %>%
summarise(tot_Emmision = sum(Emissions))
source('D:/Skitch/Code/R/DataScienceSpecialization/DataScienceSpecialization/Exploratory Data Analysis/Project 2/Question 1.R')
source('D:/Skitch/Code/R/DataScienceSpecialization/DataScienceSpecialization/Exploratory Data Analysis/Project 2/Question 1.R', echo=TRUE)
source('D:/Skitch/Code/R/DataScienceSpecialization/DataScienceSpecialization/Exploratory Data Analysis/Project 2/Question 1.R')
question1()
dir.create("./Data", showWarnings = FALSE)
fileUrl <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip"
zipFile <- "./Data/NEI_data.zip"
if (!file.exists(zipFile)) {
download.file(fileUrl, destfile = zipFile, mode="wb")  # download in binary mode
}
fname = unzip(zipFile, list=TRUE)$Name # Get the names of the zip files
unzip(zipFile, files = fname, overwrite = FALSE, exdir = "./Data") # Extract only missing files
## This first line will likely take a few seconds. Be patient!
NEI <- readRDS(paste("./Data", fname[2], sep = "/"))
SCC <- readRDS(paste("./Data", fname[1], sep = "/"))
# pollution <- select(NEI, year, Emissions)
# pollutionByYear <- group_by(pollution, year)  %>%
#                       summarise(tot_Emmision = sum(Emissions))
Total_PM25_By_Year <- select(NEI, year, Emissions) %>%
group_by(year)  %>%
summarise(tot_Emmision = sum(Emissions))
# Plot for the scrren
plot_emmision()
# Plot for the scrren
plot_emmision(Total_PM25_By_Year)
# Plot for file
png(filename = "./Question 1.png")
plot_emmision(Total_PM25_By_Year)
dev.off()
source('D:/Skitch/Code/R/DataScienceSpecialization/DataScienceSpecialization/Exploratory Data Analysis/Project 2/Question 1.R')
question1()
?options
?suppressWarnings
source('D:/Skitch/Code/R/DataScienceSpecialization/DataScienceSpecialization/Exploratory Data Analysis/Project 2/Question 1.R')
question1()
setwd("D:/Skitch/Code/R/DataScienceSpecialization/DataScienceSpecialization/Exploratory Data Analysis/Project 2")
plot_emmision <- function (Total_PM25_By_Year) {
par(mfrow = c(1,1))
with(Total_PM25_By_Year, plot(year, tot_Emmision, pch = 2,
xlab = "Year",
ylab = "Total Emmision",
main = "Total PM2.5 by Year"))
model <- lm(tot_Emmision ~ year, Total_PM25_By_Year)
abline(model, lwd = 2)
}
library(dplyr)
dir.create("./Data", showWarnings = FALSE)
fileUrl <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip"
zipFile <- "./Data/NEI_data.zip"
if (!file.exists(zipFile)) {
download.file(fileUrl, destfile = zipFile, mode="wb")  # download in binary mode
}
options(warn = -1) # Turn off warning if file is not overwritten
fname = unzip(zipFile, list=TRUE)$Name # Get the names of the zip files
unzip(zipFile, files = fname, overwrite = FALSE, exdir = "./Data") # Extract only missing files
options(warn = 0) # Want to see any other errors
## This first line will likely take a few seconds. Be patient!
NEI <- readRDS(paste("./Data", fname[2], sep = "/"))
SCC <- readRDS(paste("./Data", fname[1], sep = "/"))
Total_PM25_By_Year <- filter(NEI, fips == "24510") %>%
select(year, Emissions) %>%
group_by(year)  %>%
summarise(tot_Emmision = sum(Emissions))
# Plot for the scrren
plot_emmision(Total_PM25_By_Year)
source('D:/Skitch/Code/R/DataScienceSpecialization/DataScienceSpecialization/Exploratory Data Analysis/Project 2/Question 2.R')
question2()
png(filename = "./Question 2.png")
plot_emmision(Total_PM25_By_Year)
dev.off()
source('D:/Skitch/Code/R/DataScienceSpecialization/DataScienceSpecialization/Exploratory Data Analysis/Project 2/Question 1.R', echo=TRUE)
source('D:/Skitch/Code/R/DataScienceSpecialization/DataScienceSpecialization/Exploratory Data Analysis/Project 2/Question 2.R')
question1()
source('D:/Skitch/Code/R/DataScienceSpecialization/DataScienceSpecialization/Exploratory Data Analysis/Project 2/Question 1.R')
source('D:/Skitch/Code/R/DataScienceSpecialization/DataScienceSpecialization/Exploratory Data Analysis/Project 2/Question 2.R')
source('D:/Skitch/Code/R/DataScienceSpecialization/DataScienceSpecialization/Exploratory Data Analysis/Project 2/plot1.R')
source('D:/Skitch/Code/R/DataScienceSpecialization/DataScienceSpecialization/Exploratory Data Analysis/Project 2/plot2.R')
setwd("D:/Skitch/Code/R/DataScienceSpecialization/DataScienceSpecialization/Exploratory Data Analysis/Project 2")
source('D:/Skitch/Code/R/DataScienceSpecialization/DataScienceSpecialization/Exploratory Data Analysis/Project 2/plot2.R')
plot1()
plot2()
source('D:/Skitch/Code/R/DataScienceSpecialization/DataScienceSpecialization/Exploratory Data Analysis/Project 2/plot2.R')
plot2()
source('D:/Skitch/Code/R/DataScienceSpecialization/DataScienceSpecialization/Exploratory Data Analysis/Project 2/plot1.R')
source('D:/Skitch/Code/R/DataScienceSpecialization/DataScienceSpecialization/Exploratory Data Analysis/Project 2/plot2.R')
plot1()
source('D:/Skitch/Code/R/DataScienceSpecialization/DataScienceSpecialization/Exploratory Data Analysis/Project 2/plot1.R')
plot1()
library(dplyr)
dir.create("./Data", showWarnings = FALSE)
fileUrl <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip"
zipFile <- "./Data/NEI_data.zip"
if (!file.exists(zipFile)) {
download.file(fileUrl, destfile = zipFile, mode="wb")  # download in binary mode
}
options(warn = -1) # Turn off warning if file is not overwritten
fname = unzip(zipFile, list=TRUE)$Name # Get the names of the zip files
unzip(zipFile, files = fname, overwrite = FALSE, exdir = "./Data") # Extract only missing files
options(warn = 0) # Want to see any other errors
## This first line will likely take a few seconds. Be patient!
NEI <- readRDS(paste("./Data", fname[2], sep = "/"))
SCC <- readRDS(paste("./Data", fname[1], sep = "/"))
Total_PM25_By_Year <- select(NEI, year, Emissions) %>%
mutate(total_pollution = Emissions / 10^6) %>%
group_by(year)  %>%
summarise(tot_Emmision = sum(Emissions))
# Plot for the scrren
head(Total_PM25_By_Year)
Total_PM25_By_Year <- select(NEI, year, Emissions) %>%
mutate(total_pollution = Emissions / 10^6)
head(Total_PM25_By_Year)
Total_PM25_By_Year <- select(NEI, year, Emissions) %>%
group_by(year)  %>%
mutate(total_pollution = Emissions / 10^6) %>%
summarise(tot_Emmision = sum(Emissions))
View(Total_PM25_By_Year)
Total_PM25_By_Year <- select(NEI, year, Emissions) %>%
group_by(year)  %>%
mutate(total_pollution = Emissions / 10^6) %>%
summarise(tot_Emmision = sum(total_pollution))
View(Total_PM25_By_Year)
source('D:/Skitch/Code/R/DataScienceSpecialization/DataScienceSpecialization/Exploratory Data Analysis/Project 2/plot1.R')
plot2()
plot1()
source('D:/Skitch/Code/R/DataScienceSpecialization/DataScienceSpecialization/Exploratory Data Analysis/Project 2/plot1.R')
plot1()
source('D:/Skitch/Code/R/DataScienceSpecialization/DataScienceSpecialization/Exploratory Data Analysis/Project 2/plot1.R')
source('D:/Skitch/Code/R/DataScienceSpecialization/DataScienceSpecialization/Exploratory Data Analysis/Project 2/plot2.R')
plot2()
source('D:/Skitch/Code/R/DataScienceSpecialization/DataScienceSpecialization/Exploratory Data Analysis/Project 2/plot1.R')
plot1()
source('D:/Skitch/Code/R/DataScienceSpecialization/DataScienceSpecialization/Exploratory Data Analysis/Project 2/plot2.R')
plot2()
source('D:/Skitch/Code/R/DataScienceSpecialization/DataScienceSpecialization/Exploratory Data Analysis/Project 2/plot2.R', echo=TRUE)
source('D:/Skitch/Code/R/DataScienceSpecialization/DataScienceSpecialization/Exploratory Data Analysis/Project 2/plot1.R', echo=TRUE)
plot1()
getwd()
plot2()
source('D:/Skitch/Code/R/DataScienceSpecialization/DataScienceSpecialization/Exploratory Data Analysis/Project 2/plot2.R', echo=TRUE)
plot2()
source('D:/Skitch/Code/R/DataScienceSpecialization/DataScienceSpecialization/Exploratory Data Analysis/Project 2/plot1.R')
plot1
plot1()
source('D:/Skitch/Code/R/DataScienceSpecialization/DataScienceSpecialization/Exploratory Data Analysis/Project 2/plot1.R')
plot1()
source('D:/Skitch/Code/R/DataScienceSpecialization/DataScienceSpecialization/Exploratory Data Analysis/Project 2/plot2.R')
plot2()
library(dplyr)
dir.create("./Data", showWarnings = FALSE)
fileUrl <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip"
zipFile <- "./Data/NEI_data.zip"
if (!file.exists(zipFile)) {
download.file(fileUrl, destfile = zipFile, mode="wb")  # download in binary mode
}
options(warn = -1) # Turn off warning if file is not overwritten
fname = unzip(zipFile, list=TRUE)$Name # Get the names of the zip files
unzip(zipFile, files = fname, overwrite = FALSE, exdir = "./Data") # Extract only missing files
options(warn = 0) # Want to see any other errors
## This first line will likely take a few seconds. Be patient!
NEI <- readRDS(paste("./Data", fname[2], sep = "/"))
SCC <- readRDS(paste("./Data", fname[1], sep = "/"))
Total_PM25_By_Year <- filter(NEI, fips == "24510") %>%
select(year, type, Emissions) %>%
group_by(year)  %>%
summarise(tot_Emision = sum(Emissions))
getwd()
View(Total_PM25_By_Year)
Total_PM25_By_Year <- filter(NEI, fips == "24510") %>%
select(year, type, Emissions) %>%
group_by(year, type)  %>%
summarise(tot_Emision = sum(Emissions))
View(Total_PM25_By_Year)
getwd()
setwd(D:'temp')
getwd()
setwd("/temp")
getwd()
source('~/.active-rstudio-document', echo=TRUE)
install.packages("readr")
devtools::install_github("hadley/readr")
quakes <- read_csv("http://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/2.5_month.csv")
setwd("D:/Skitch/Code/R/DataScienceSpecialization/DataScienceSpecialization/Exploratory Data Analysis/Project 2")
source('D:/Skitch/Code/R/DataScienceSpecialization/DataScienceSpecialization/Exploratory Data Analysis/Project 2/plot3.R', echo=TRUE)
plot_emision(Total_PM25_By_Year)
ptl <- plot_emision(Total_PM25_By_Year)
png(filename = "./plot3.png")
ptl
dev.off()
library(ggplot)
library(ggplot2)
qplot(year, tot_Emission, data = Total_PM25_By_Year, facets = .~type)
qplot(year, tot_Emission, data = Total_PM25_By_Year)
str(Total_PM25_By_Year)
View(Total_PM25_By_Year)
qplot(year, tot_Emision, data = Total_PM25_By_Year)
qplot(year, tot_Emision, data = Total_PM25_By_Year, facets = .~type)
qp <- qplot(year, tot_Emision, data = Total_PM25_By_Year, facets = .~type)
qp
# Plot for file
png(filename = "./plot3.png")
qp
dev.off()
?qplot
?geom
qp <- qplot(year, tot_Emision, data = Total_PM25_By_Year, facets = .~type,
stat = "lm")
qp <- qplot(year, tot_Emision, data = Total_PM25_By_Year, facets = .~type,
geom = "smooth")
qp
qp <- qplot(year, tot_Emision, data = Total_PM25_By_Year, facets = .~type,
geom = "lm")
qp
qp <- qplot(year, tot_Emision, data = Total_PM25_By_Year, facets = .~type,
geom = "smooth", method = "lm")
qp
# Plot for the scrren
qp <- qplot(year, tot_Emision, data = Total_PM25_By_Year, facets = .~type,
geom = "smooth", method = "lm", formula = y~x)
qp
qp <- qplot(year, tot_Emision, data = Total_PM25_By_Year, facets = .~type,
geom = "smooth", method = "lm", formula = y~x, evn = 0)
qp
# Plot for the scrren
qp <- qplot(year, tot_Emision, data = Total_PM25_By_Year, facets = .~type,
geom = "smooth", method = "lm", formula = y~x, env = 0)
qp
# Plot for the scrren
qp <- qplot(year, tot_Emision, data = Total_PM25_By_Year, facets = .~type,
geom = "smooth", method = "lm", formula = y~x, var=0)
qp
# Plot for the scrren
qp <- qplot(year, tot_Emision, data = Total_PM25_By_Year, facets = .~type,
geom = c("point", "smooth"), method = "lm", formula = y~x, var=0)
qp
g <- ggplot(Total_PM25_By_Year, ase(year, tot_Emision))
g <- ggplot(Total_PM25_By_Year, aes(year, tot_Emision))
summary(g)
g <- ggplot(Total_PM25_By_Year, aes(year, tot_Emision))
+ geom_point()
g
print(g)
g <- ggplot(Total_PM25_By_Year, aes(year, tot_Emision))
+ geom_point()
g <- ggplot(Total_PM25_By_Year, aes(year, tot_Emision)) + geom_point()
print(g)
g <- ggplot(Total_PM25_By_Year, aes(year, tot_Emision)) + geom_point() +
geom_smooth(method = "lm")
print(g)
g <- ggplot(Total_PM25_By_Year, aes(year, tot_Emision)) + geom_point() +
geom_smooth(method = "lm" + facet_grid(.~type))
print(g)
View(Total_PM25_By_Year)
str(Total_PM25_By_Year)
Total_PM25_By_Year <- filter(NEI, fips == "24510") %>%
select(year, as.factor(type), Emissions) %>%
group_by(year, type)  %>%
summarise(tot_Emision = sum(Emissions))
Total_PM25_By_Year <- filter(NEI, fips == "24510") %>%
select(year, type, Emissions) %>%
mutate(type = as.factor(type)) %>%
group_by(year, type)  %>%
summarise(tot_Emision = sum(Emissions))
str(Total_PM25_By_Year)
qp <- qplot(year, tot_Emision, data = Total_PM25_By_Year, facets = .~type,
geom = c("point", "smooth"), method = "lm", formula = y~x, var=0)
qp
g <- ggplot(Total_PM25_By_Year, aes(year, tot_Emision)) + geom_point() +
geom_smooth(method = "lm" + facet_grid(. ~ type), se = FALSE)
print(g)
g <- ggplot(Total_PM25_By_Year, aes(year, tot_Emision)) + geom_point() +
geom_smooth(method = "lm" + facet_grid(. ~ type), se = FALSE)
print(g)
g <- ggplot(Total_PM25_By_Year, aes(year, tot_Emision)) + geom_point() +
geom_smooth(method = "lm" + facet_grid(. ~ type))
print(g)
g <- ggplot(Total_PM25_By_Year, aes(year, tot_Emision)) + geom_point() +
geom_smooth(method = "lm") + facet_grid(. ~ type))
print(g)
g <- ggplot(Total_PM25_By_Year, aes(year, tot_Emision)) + geom_point() +
geom_smooth(method = "lm") + facet_grid(. ~ type))
g <- ggplot(Total_PM25_By_Year, aes(year, tot_Emision) + geom_point() +
geom_smooth(method = "lm") + facet_grid(. ~ type) )
print(g)
qp <- qplot(year, tot_Emision, data = Total_PM25_By_Year, facets = .~type,
geom = c("point", "smooth"), method = "lm", formula = y~x, var=0)
qp
qp <- qplot(year, tot_Emision, data = Total_PM25_By_Year, facets = .~type,
geom = c("point", "smooth"), method = "lm", formula = y~x, se = FALSE)
qp
g <- ggplot(Total_PM25_By_Year, aes(year, tot_Emision) + geom_point() +
geom_smooth(method = "lm") + facet_grid(. ~ type) )
g <- ggplot(Total_PM25_By_Year, aes(year, tot_Emision) + geom_point() +
geom_smooth(method = "lm") )
str(Total_PM25_By_Year)
g <- ggplot(Total_PM25_By_Year, aes(year, tot_Emision) + geom_point() )
View(Total_PM25_By_Year)
summary(Total_PM25_By_Year)
g <- ggplot(Total_PM25_By_Year, aes(year, tot_Emision) + geom_point() )
g <- ggplot(Total_PM25_By_Year, aes(year, tot_Emision)  )
g <- ggplot(Total_PM25_By_Year, aes(year, tot_Emision) + geom_point() +
geom_smooth(method = "lm") + facet_grid(. ~ type)
g <- ggplot(Total_PM25_By_Year, aes(year, tot_Emision) ) + geom_point() +
geom_smooth(method = "lm") + facet_grid(. ~ type)
print(g)
g <- ggplot(Total_PM25_By_Year, aes(year, tot_Emision) ) + geom_point() +
geom_smooth(method = "lm", se = FALSE) + facet_grid(. ~ type)
print(g)
png(filename = "./plot3.png")
g
dev.off()
?png
png(filename = "./plot3.png", width = 720, height = 720)
g
dev.off()
png(filename = "./plot3.png", width = 720, height = 480)
g
dev.off()
?ggplot
g <- ggplot(Total_PM25_By_Year, aes(year, tot_Emision) ) + geom_point() +
geom_smooth(method = "lm", se = FALSE) + facet_grid(. ~ type) +
labs(title = "Total PM2.5 - Baltimore City"") +
labs(x = "Year", y = "Total Emision (tons)")
print(g)
g <- ggplot(Total_PM25_By_Year, aes(year, tot_Emision) ) + geom_point() +
geom_smooth(method = "lm", se = FALSE) + facet_grid(. ~ type) +
labs(title = "Total PM2.5 - Baltimore City") +
labs(x = "Year", y = "Total Emision (tons)")
print(g)
g
getwd()
source('D:/Skitch/Code/R/DataScienceSpecialization/DataScienceSpecialization/Exploratory Data Analysis/Project 2/plot3.R')
plot3()
source('D:/Skitch/Code/R/DataScienceSpecialization/DataScienceSpecialization/Exploratory Data Analysis/Project 2/plot3.R')
plot3()
